import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'application'
    id 'java'
}

group = 'io.github.oxi1224'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
  useJUnitPlatform()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
    }
}

jar {
  manifest {
    attributes 'Main-Class': 'io.github.oxi1224.Main'
  }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(Test) {
    testLogging {
        // set options for log level LIFECYCLE
        events TestLogEvent.FAILED,
                   TestLogEvent.SKIPPED,
                   TestLogEvent.STANDARD_ERROR,
                   TestLogEvent.STANDARD_OUT
        exceptionFormat TestExceptionFormat.FULL
        showExceptions true
        showCauses true
        showStackTraces false
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

        beforeSuite { desc ->
            if (!desc.name.startsWith("Gradle Test")) { 
                println "\nRunning ${desc.name}"
            }
        }

        afterSuite { desc, result ->
            def duration = String.format("%.3f sec", (result.endTime - result.startTime) / 1000)

            if (desc.name.startsWith("Gradle Test Executor")) {
                def output = "Result: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped) ${duration}"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
                return
            }

            if (!desc.name.startsWith("Gradle Test")) { 
                println "Tests run: ${result.testCount}, Failures: ${result.failedTestCount}, Errors: 0, Skipped: ${result.skippedTestCount} Time elapsed: ${duration}"
            }
        }
    }
}
